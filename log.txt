Log Entries Begin 12/10/15

/*************************************************************************************************************************************
g++ --std=c++0x boardFuns.cpp playerFuns.cpp handFuns.cpp tableFuns.cpp cardsFun.cpp cribFuns.cpp crib.h deckFuns.cpp main.cpp -o play
*************************************************************************************************************************************/

12/10/15:
	Added in Crib class. This allows for easier use of the crib. There are now 5 classes.
	Began basic calculations of points in hand //EDIT
	Created skeleton in main.cpp
	Finished calculations of points in hand
	Note: Crib set up assuming 2 player game
	Note: Fifteen only calculates two card fifteens
	PROBLEMS:
		Fifteen doesn't work at all // FIXED
		Run doesn't work at all // FIXED
	Note: Crib doesn't go to a player yet, and can't go to a player
	Note: Run can only find one run

12/13/15:
	Worked on 15s - Fixed. Now works for any number of cards
	Note: Possible issue with pairs.  Needs to be investigated.
		RESOLVED: The single pair loop wasn't checking the last two
	Allowed for calculation of double runs
		RESOLVED: Crib goes to the correct player (Or it did)
	Note: Two pair doesn't work...
	Note: Flush may or may not work // FIXED
	I think all is fixed.  Need to run many tests to determine if this is correct.
	Question: A2333 is worth 9 pts, correct?  If so that needs fixing.
	Answer: My thought was correct, but solution has been implemented
	Spent much to long on formatting. Calling it a night as I have final in the morning.

12/14/15:
	Final was easier than I anticipated.
	Formatting is fixed.  Need to run games to check for correctness in scoring.
	I do believe I have fixed all counting.  Going to run it past some people in order to verify.
	
	Thoughts on Pegging:
		Create a Pegging class that all of the cards eventually go on to.
		This would allow for the check for 31 and have functionality for run/pair checking
		RUNS ARE GOING TO BE HARD.  They don't need to be in order.
	
	Began the pegging challenge
	Mike has an Idea for the runs:
		Run 3: check last 3 (Always)
		Run 4: check last 4 (max<=9)
		Run 5: check last 5 (max<=8)
		Run 6: check last 6 (max<=7)
		Run 7: check last 7 (max<=7)

12/26/15:
	Merry Christmas!
	Going through and adding a breif description of each function to make it easier for others to look over.
	Pegging still doesn't work.
	Added in an array of GO responces to hopefuly be able to check for when all have said GO
	TO DO:
		When players all say GO, give one point to the last player to say GO
		If 31 comes first, give 2 points to the player who created the 31 and reset
	Fifteens work in pegging, but the others still don't
	Pairs work in pegging, runs still in question
	Just notices a rare case previously unaccounted for, 3 kind and pair // FIXED
	Something strange is happening with pegging runs.
	I think I did the two things with 31, but when 31 is reached, the program halts indefinatly
	ISSUE 1:
		I just played one hand w/ pegging succesfully.  
		The issue is that after this one hand, the scores were:
			P1: 120
			P2: 117
		which is clearly impossible.
	ISSUE 2:
		Error appears to uccor after reset() is called && (total != 31):
		*** Error in './play': free(): Invalid next size (fast): 0x0000000000b805b0 ***
		Aborted (core dumped)
	
	NOTE ON ISSUE 1:
		Problem lies in pegging somewhere.  Commenting out the call to pegging works the scoring correctly.
	ISSUE 3:
		"The Joker of Spades was played for 0pts."  Wait a minute...
		Printing the deck reveals that the cards are correctly created with no jokers.
	
12/28/15
	Thought I'd look over the 31 problem again.
	Suggestion from Ian: clearing the vector is broken.  Seting an alternative solution.
	SOlution worked. vector::clear() worked.
	ISSUE:
		After pegging, players recieve -1 pts.
		They should have gotten 1.
	ISSUE:
		If user says to play card 7, SegFault

12/29/15
	Fixed the problem of inputing a number to large, but still not 31s.
	Trying to play the last card in your hand results in "You can't do that".
	So far, there appear to only be two peoblems remaining:
		Runs while pegging
		Playing one's last card
	The last card issue appears to have something to do with the other person having said GO.
	Check played started with a total of 26.
		8 got rejected b/c total was 35. // Should be 36
		5 got rejected b/c total was 36. // should be 31
	RESOLVED: Off by one error was causing the wrong card to be analyzed.
	All that remains are the runs
	I have made some restrictions to when it tests for runs.
	Somehow the cards it is looking at are not the cards played.
	Played:
		1 3 4 2 - scrambled run of 4
	Testing:
		2 4 0 4 - two match, but...
	Interesting:
		I played the 10 of Clubs, all is well
		I played the 9 of Diamonds, runs rested the 10 of Spades (off by 2)
		But it works properly for 15s and pairs...
	Problem:
		Played:
			3 of Diamonds - succesfully added
			2 of Hearts   - added 4 of Spades
		Note:
			2 of Hearts -> 4 of Spades
			2 -> 4 = +2
			H -> S = -1
	Previously:
			9 -> 10 = +1
			D -> S  = -3
		No pattern for #'s, but always seems to play spades
	It appears that when a card is added to the deck, the deck replicates the last played card.
	It then adds the new card.  This still doens't solve the problem.
	Game Output:
		Player 1:
		Your Hand: 
			1) 2 of Hearts
			2) 2 of Clubs
			3) 6 of Hearts
			4) 6 of Spades
			5) GO
		Play What card [0-4]: 1
			1) 2 of Hearts // Stack
		The 2 of Hearts was played for 0pts.
		Pts. played is now 2.
		
		
		Player 2:
		Your Hand: 
			1) A of Hearts
			2) 3 of Diamonds
			3) 4 of Diamonds
			4) 5 of Hearts
			5) GO
		Play What card [0-4]: 1
			1) 2 of Hearts // Stack
			2) 2 of Hearts // Repeated Card
			3) A of Hearts // Added Card
		2 of Hearts // Looking for runs
		6 of Spades
		HSize: 2
		Max: 2
		Testing run of 3
		1 1
		The A of Hearts was played for 0pts.
		Pts. played is now 3.
	RESOLVED (Finally):
		Aparently I was telling the game to add the card in order to do the calculations and then add it again in order to remove it from the player's hand.
		That solved the replication problem.
		The runs problem uccored as it was testing against itself instead of the next card.
	All that remains is when 31 is reached, it doesn't reset immedeatly.
	It also turns out that pairs have stopped working.  Strange.
	Fixed that.  Now I just need to insure that 31s work.
	

