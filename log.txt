Log Entries Begin 12/10/15

/*************************************************************************************************************************************
g++ --std=c++0x boardFuns.cpp playerFuns.cpp handFuns.cpp tableFuns.cpp cardsFun.cpp cribFuns.cpp crib.h deckFuns.cpp main.cpp -o play
*************************************************************************************************************************************/

12/10/15:
	Added in Crib class. This allows for easier use of the crib. There are now 5 classes.
	Began basic calculations of points in hand //EDIT
	Created skeleton in main.cpp
	Finished calculations of points in hand
	Note: Crib set up assuming 2 player game
	Note: Fifteen only calculates two card fifteens
	PROBLEMS:
		Fifteen doesn't work at all // FIXED
		Run doesn't work at all // FIXED
	Note: Crib doesn't go to a player yet, and can't go to a player
	Note: Run can only find one run

12/13/15:
	Worked on 15s - Fixed. Now works for any number of cards
	Note: Possible issue with pairs.  Needs to be investigated.
		RESOLVED: The single pair loop wasn't checking the last two
	Allowed for calculation of double runs
		RESOLVED: Crib goes to the correct player (Or it did)
	Note: Two pair doesn't work...
	Note: Flush may or may not work // FIXED
	I think all is fixed.  Need to run many tests to determine if this is correct.
	Question: A2333 is worth 9 pts, correct?  If so that needs fixing.
	Answer: My thought was correct, but solution has been implemented
	Spent much to long on formatting. Calling it a night as I have final in the morning.

12/14/15:
	Final was easier than I anticipated.
	Formatting is fixed.  Need to run games to check for correctness in scoring.
	I do believe I have fixed all counting.  Going to run it past some people in order to verify.
	
	Thoughts on Pegging:
		Create a Pegging class that all of the cards eventually go on to.
		This would allow for the check for 31 and have functionality for run/pair checking
		RUNS ARE GOING TO BE HARD.  They don't need to be in order.
	
	Began the pegging challenge
	Mike has an Idea for the runs:
		Run 3: check last 3 (Always)
		Run 4: check last 4 (max<=9)
		Run 5: check last 5 (max<=8)
		Run 6: check last 6 (max<=7)
		Run 7: check last 7 (max<=7)

12/26/15:
	Merry Christmas!
	Going through and adding a breif description of each function to make it easier for others to look over.
	Pegging still doesn't work.
	Added in an array of GO responces to hopefuly be able to check for when all have said GO
	TO DO:
		When players all say GO, give one point to the last player to say GO
		If 31 comes first, give 2 points to the player who created the 31 and reset
	Fifteens work in pegging, but the others still don't
	Pairs work in pegging, runs still in question
	Just notices a rare case previously unaccounted for, 3 kind and pair // FIXED
	Something strange is happening with pegging runs.
	I think I did the two things with 31, but when 31 is reached, the program halts indefinatly
	ISSUE 1:
		I just played one hand w/ pegging succesfully.  The issue is that after this one hand, the scores were:
			P1: 120
			P2: 117
		which is clearly impossible.
	ISSUE 2:
		Error appears to uccor after reset() is called && (total != 31):
		*** Error in './play': free(): Invalid next size (fast): 0x0000000000b805b0 ***
		Aborted (core dumped)
	
	NOTE ON ISSUE 1:
		Problem lies in pegging somewhere.  COmmenting out the call to pegging works the scoring correctly.
